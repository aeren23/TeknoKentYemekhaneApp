@page "/"
@using System.Globalization
@using Microsoft.Fast.Components.FluentUI
@using WebUI.Models.Employee
@using WebUI.Models.MealRecord
@using WebUI.Services
@inject EmployeeService EmployeeService
@inject MealRecordService MealRecordService

<FluentCalendar DisabledDateFunc="@DisabledDate" @bind-Value="SelectedValue">
</FluentCalendar>

<p>Seçili gün: @(SelectedValue?.ToString("yyyy-MM-dd") ?? "-")</p>

<!-- Bootstrap Modal -->
<div class="modal fade" id="mealModal" tabindex="-1" aria-labelledby="mealModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form @onsubmit="HandleSubmit">
                <div class="modal-header">
                    <h5 class="modal-title" id="mealModalLabel">Yemek Kaydı</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Çalışan Seçiniz</label>
                        <select @bind="SelectedEmployeeId" class="form-select" required>
                            <option value="">Seçiniz</option>
                            @if(Employees != null && Employees.Count > 0)
                            {
                                foreach (var employee in Employees)
                                {
                                    <option value="@employee.Id">@employee.Name</option>
                                }
                            }
                            else
                            {
                                <option disabled>Çalışan bulunamadı</option>
                            })
                        </select>
                    </div>
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="eatenCheck" @bind="IsEaten" />
                        <label class="form-check-label" for="eatenCheck">Yemek Yedi</label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                    <button type="submit" class="btn btn-primary" disabled="@(SelectedEmployeeId == Guid.Empty)">Kaydet</button>
                </div>
            </form>
        </div>
    </div>
</div>

@code {


    private DateTime? SelectedValue
    {
        get => _selectedValue;
        set
        {
            if (_selectedValue != value)
            {
                _selectedValue = value;
                if (value.HasValue)
                {
                    ShowModal();
                    SelectedEmployeeId = Guid.Empty;
                    IsEaten = false;
                }
            }
        }
    }
    private DateTime? _selectedValue;

    private List<EmployeeViewModel> Employees;

    protected override async Task OnInitializedAsync()
    {
        Employees = await EmployeeService.GetEmployeesAsync();
    }

    private Guid SelectedEmployeeId;
    private bool IsEaten = false;

    private bool DisabledDate(DateTime date)
    {
        return (date.Day == 3 || date.Day == 8 || date.Day == 20);
    }

    @code {  
        private async void SaveMealRecord()  
        {  
            if (SelectedValue.HasValue)  
            {  
                await MealRecordService.AddMealRecordAsync(new MealRecordCreateViewModel  
                {  
                    EmployeeId = SelectedEmployeeId,  
                    MealDate = DateOnly.FromDateTime(SelectedValue.Value),  
                    IsEaten = IsEaten  
                });  

                HideModal();  
            }  
        }  
    }

    private async Task HandleSubmit()
    {
        SaveMealRecord();
        await Task.CompletedTask;
    }

    // JS ile Bootstrap modal kontrolü
    [Inject] IJSRuntime JS { get; set; }

    private async void ShowModal()
    {
        await JS.InvokeVoidAsync("eval", "new bootstrap.Modal(document.getElementById('mealModal')).show()");
    }

    private async void HideModal()
    {
        await JS.InvokeVoidAsync("eval", "bootstrap.Modal.getInstance(document.getElementById('mealModal')).hide()");
    }
}
